name: Benchmark
on:
  schedule:
    - cron: 0 0 * * *
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: [8,9,10]
        compiler:
          - { cc: gcc, cxx: g++ }
          - { cc: clang, cxx: clang++ }

    env:
      CC: ${{ matrix.compiler.cc }}-${{ matrix.version }}
      CXX: ${{ matrix.compiler.cxx }}-${{ matrix.version }}

    steps:
    - uses: actions/checkout@v2
          
    - name: Install System Dependencies
      run: |
        sudo apt update
        sudo apt install cmake g++-8 g++-9 g++-10 clang-8 clang-9 clang-10 python3-pip gnuplot valgrind
        
    - name: Install Conan
      run: |
        sudo pip3 install conan
        conan remote add cci-beta https://center.conan.io False

    - name: Cache Conan
      id: cache-conan
      uses: actions/cache@v2
      with:
        path: ~/.conan
        key:
          conan-cache-${{ runner.os }}-${{ env.cxx }}
    - name: Get current date
      id: date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%dT%H:%M:%S' --utc)" >> $GITHUB_ENV
    - name: Cache Result History
      uses: actions/cache@v2
      env:
        cache-name: result-history
      with:
        path: | 
          benchmark/simple_runtime_history.csv
          benchmark/complex_runtime_history.csv
        key:
          ${{ env.cache-name }}-${{ runner.os }}-${{ env.cxx }}-${{ env.CURRENT_DATE }}
        restore-keys:
          ${{ env.cache-name }}-${{ runner.os }}-${{ env.cxx }}
          
    - name: Install Conan Dependencies
      run: |
        echo $CXX
        echo $CC
        mkdir -p build/dependencies/conan
        conan install . -if build/dependencies/conan -s compiler.libcxx=libstdc++11 --build missing

    - name: Configure CMake
      run: |
        echo $CXX
        echo $CC
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -D "CMAKE_MODULE_PATH=${PWD}/build/dependencies/conan"
        cmake --build build/ 

    - name: Evaluate Compiletime Benchmark
      run: |
        echo $CXX
        echo $CC
        cd benchmark && ./evaluate_compiletime.sh
      
    - name: Evaluate Runtime Benchmark
      run: |
        cd benchmark && ./evaluate_runtime.sh

    - name: Evaluate Memory Benchmark
      run: |
        echo $CXX
        echo $CC
        rm build/* -rf
        mkdir -p build/dependencies/conan
        conan install . -if build/dependencies/conan -s compiler.libcxx=libstdc++11 --build missing
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -D "CMAKE_MODULE_PATH=${PWD}/build/dependencies/conan"
        cd benchmark && ./evaluate_compilememory.sh        
      env:
        CC: valgrind --tool=massif --pages-as-heap=yes ${{ matrix.compiler.cc }}-${{ matrix.version }}
        CXX: valgrind --tool=massif --pages-as-heap=yes ${{ matrix.compiler.cxx }}-${{ matrix.version }}

    - name: Visualize Runtime Benchmark
      run: |
        cd benchmark 
        gnuplot simple_runtime.pl -p
        gnuplot complex_runtime.pl -p

